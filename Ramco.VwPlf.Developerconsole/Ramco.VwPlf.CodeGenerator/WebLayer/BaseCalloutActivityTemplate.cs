// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Ramco.VwPlf.CodeGenerator.WebLayer
{
    using System.IO;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\WebLayer\BaseCalloutActivityTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class BaseCalloutActivityTemplate : BaseCalloutActivityTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("/********************************************************************************" +
                    "************************\r\n* Copyright @2004, RAMCO SYSTEMS,  All rights reserved" +
                    ".\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n* Application/Module Name   :activity.cs\r\n* Code Generated on   " +
                    "      :");
            
            #line 8 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\WebLayer\BaseCalloutActivityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DateTime.Now));
            
            #line default
            #line hidden
            this.Write("\r\n* Code Generated From       :");
            
            #line 9 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\WebLayer\BaseCalloutActivityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(string.Format("{0}/{1}/{2}/{3}/{4}/{5}/{6}",ecrOptions.Customer, ecrOptions.Project, ecrOptions.Ecrno, ecrOptions.Model, ecrOptions.User, ecrOptions.DB, ecrOptions.CodegenClient)));
            
            #line default
            #line hidden
            this.Write(@"
* Revision/Version #        :
* Purpose                   :Base callout activity cs
* Modifications             :
* Modifier Name & Date      :
********************************************************************************************************/
using System;
using System.Web;
using System.Xml;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using Ramco.VW.RT.Web.Core;
using System.Reflection;
[assembly: AssemblyDescription(""");
            
            #line 23 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\WebLayer\BaseCalloutActivityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ecrOptions.AssemblyDescription));
            
            #line default
            #line hidden
            this.Write("\")]\r\n\r\nnamespace ");
            
            #line 25 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\WebLayer\BaseCalloutActivityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(sNamespaceName));
            
            #line default
            #line hidden
            this.Write(@"
{
	#region activity Class
	
	public class activity
	{
		private Hashtable htContextItems = new Hashtable();

        /**************************************************************************
        Function Name	: GetILBOEx
        Author			: 
        Date			: ");
            
            #line 36 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\WebLayer\BaseCalloutActivityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DateTime.Now.ToShortDateString()));
            
            #line default
            #line hidden
            this.Write(@"
        Description		: 
        ***************************************************************************/
        public IILBO GetILBOEx(string sILBOCode, long lILBOIndex)
        {
            try
            {
                Trace.WriteLineIf(SessionManager.m_ILActTraceSwitch.TraceInfo, ""GetILBOEx( sILBOCode = \"""" + sILBOCode + ""\"")"", ""Activity "");
                return null;
            }
            catch (Exception e)
            {
                FillMessageObject(""activity : GetILBOEx( sILBOCode = \"""" + sILBOCode + ""\"")"", ""Act0001"", e.Message);
                throw new Exception(e.Message, e);
            }
        }

        /**************************************************************************
        Function Name   : DisposeILBOEx
        Author			: 
        Date			: ");
            
            #line 56 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\WebLayer\BaseCalloutActivityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DateTime.Now.ToShortDateString()));
            
            #line default
            #line hidden
            this.Write(@"
        Description     : 
        ***************************************************************************/
        public void DisposeILBOEx(string sILBOCode, long lILBOIndex)
        {
            try
            {
                Trace.WriteLineIf(SessionManager.m_ILActTraceSwitch.TraceInfo, ""DisposeILBOEx( sILBOCode = \"""" + sILBOCode + ""\"")"", ""Activity "");
            }
            catch (Exception e)
            {
                FillMessageObject(""activity : DisposeILBOEx( sILBOCode = \"""" + sILBOCode + ""\"")"", ""Act0002"", e.Message);
                throw new Exception(e.Message, e);
            }
        }

        /**************************************************************************
        Function Name   : GetILBO
        Author			: 
        Date			: ");
            
            #line 75 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\WebLayer\BaseCalloutActivityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DateTime.Now.ToShortDateString()));
            
            #line default
            #line hidden
            this.Write(@"
        Description     : 
        ***************************************************************************/
        public IILBO GetILBO(string sILBOCode)
        {
            try
            {
                Trace.WriteLineIf(SessionManager.m_ILActTraceSwitch.TraceInfo, ""GetILBO( sILBOCode = \"""" + sILBOCode + ""\"")"", ""Activity "");
                return null;
            }
            catch (Exception e)
            {
                FillMessageObject(""activity : GetILBO( sILBOCode = \"""" + sILBOCode + ""\"")"", ""Act0001"", e.Message);
                throw new Exception(e.Message, e);
            }
        }

        /**************************************************************************
        Function Name   : DisposeILBO
        Author			: 
        Date			: ");
            
            #line 95 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\WebLayer\BaseCalloutActivityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DateTime.Now.ToShortDateString()));
            
            #line default
            #line hidden
            this.Write(@"
        Description     : 
        ***************************************************************************/
        public void DisposeILBO(string sILBOCode)
        {
            try
            {
                Trace.WriteLineIf(SessionManager.m_ILActTraceSwitch.TraceInfo, ""DisposeILBO( sILBOCode = \"""" + sILBOCode + ""\"")"", ""Activity "");
            }
            catch (Exception e)
            {
                FillMessageObject(""activity : DisposeILBO( sILBOCode = \"""" + sILBOCode + ""\"")"", ""Act0002"", e.Message);
                throw new Exception(e.Message, e);
            }
        }

        /**************************************************************************
        Function Name   : GetILBO_Start
        Author			: 
        Date			: ");
            
            #line 114 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\WebLayer\BaseCalloutActivityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DateTime.Now.ToShortDateString()));
            
            #line default
            #line hidden
            this.Write(@"
        Description     : This function can be invoked from the activity dll TreeComplex.cs, at the start of  method GetILBO
                        The base method will have following parameters - string sILBOCode
                        The wrapped method will have following parameters - ref string sILBOCode As string, ref Hashtable htContextItems
        ***************************************************************************/
        public IILBO GetILBO_Start(ref string sILBOCode, ref Dictionary<string, Object> htContextItems)
        {
            try
            {
                return null;
            }
            catch (Exception e)
            {
                FillMessageObject(""activity : GetILBO( sILBOCode = \"""" + sILBOCode + ""\"")"", ""Act0001"", e.Message);
                throw new Exception(e.Message, e);
            }
        }

        /**************************************************************************
        Function Name   : GetILBO_Start
        Author			: 
        Date			: ");
            
            #line 135 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\WebLayer\BaseCalloutActivityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DateTime.Now.ToShortDateString()));
            
            #line default
            #line hidden
            this.Write(@"
        Description     : 
        ***************************************************************************/
        public IILBO GetILBO_Start(ref string sILBOCode, ref Hashtable htContextItems)
        {
            try
            {
                return null;
            }
            catch (Exception e)
            {
                FillMessageObject(""activity : GetILBO( sILBOCode = \"""" + sILBOCode + ""\"")"", ""Act0001"", e.Message);
                throw new Exception(e.Message, e);
            }
        }

        /**************************************************************************
        Function Name   : GetILBO_End
        Author			: 
        Date			: ");
            
            #line 154 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\WebLayer\BaseCalloutActivityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DateTime.Now.ToShortDateString()));
            
            #line default
            #line hidden
            this.Write(@"
        Description     : This function can be invoked from the activity dll TreeComplex.cs, at the end of  method GetILBO
                   The base method will have following parameters - string sILBOCode
                   The wrapped method will have following parameters - ref string sILBOCode As string, ref Hashtable htContextItems

        ***************************************************************************/
        public IILBO GetILBO_End(ref string sILBOCode, ref Dictionary<string, Object> htContextItems)
        {
            try
            {
                return null;
            }
            catch (Exception e)
            {
                FillMessageObject(""activity : GetILBO( sILBOCode = \"""" + sILBOCode + ""\"")"", ""Act0001"", e.Message);
                throw new Exception(e.Message, e);
            }
        }

        public IILBO GetILBO_End(ref string sILBOCode, ref Hashtable htContextItems)
        {
            try
            {
                return null;
            }
            catch (Exception e)
            {
                FillMessageObject(""activity : GetILBO( sILBOCode = \"""" + sILBOCode + ""\"")"", ""Act0001"", e.Message);
                throw new Exception(e.Message, e);
            }
        }


        /**************************************************************************
        Function Name   : GetILBO_ErrHdlr
        Author			: 
        Date			: ");
            
            #line 190 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\WebLayer\BaseCalloutActivityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DateTime.Now.ToShortDateString()));
            
            #line default
            #line hidden
            this.Write("\r\n        Description     : This function can be invoked from the activity dll Tr" +
                    "eeComplex.cs, in the catch block of GetILBO Method\r\n                        The " +
                    "base method will have following parameters - string sILBOCode\r\n                 " +
                    "       The wrapped method will have following parameters - ref string sILBOCode " +
                    "As string, ref Hashtable htContextItems, ref Exception e\r\n\r\n        ************" +
                    "***************************************************************/\r\n\r\n        publ" +
                    "ic IILBO GetILBO_ErrHdlr(ref string sILBOCode, ref Hashtable htContextItems, ref" +
                    " Exception ex)\r\n        {\r\n            try\r\n            {\r\n                retur" +
                    "n null;\r\n            }\r\n            catch (Exception e)\r\n            {\r\n        " +
                    "        FillMessageObject(\"activity : GetILBO( sILBOCode = \\\"\" + sILBOCode + \"\\\"" +
                    ")\", \"Act0001\", e.Message);\r\n                throw new Exception(e.Message, e);\r\n" +
                    "            }\r\n        }\r\n\r\n        public IILBO GetILBO_ErrHdlr(ref string sILB" +
                    "OCode, ref Dictionary<string, Object> htContextItems, ref Exception ex)\r\n       " +
                    " {\r\n            try\r\n            {\r\n                return null;\r\n            }\r" +
                    "\n            catch (Exception e)\r\n            {\r\n                FillMessageObje" +
                    "ct(\"activity : GetILBO( sILBOCode = \\\"\" + sILBOCode + \"\\\")\", \"Act0001\", e.Messag" +
                    "e);\r\n                throw new Exception(e.Message, e);\r\n            }\r\n        " +
                    "}\r\n\r\n\r\n        /****************************************************************" +
                    "**********\r\n        Function Name   : DisposeILBO_Start\r\n        Author\t\t\t: \r\n  " +
                    "      Date\t\t\t: ");
            
            #line 227 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\WebLayer\BaseCalloutActivityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DateTime.Now.ToShortDateString()));
            
            #line default
            #line hidden
            this.Write(@"
        Description     : This function can be invoked from the activity dll TreeComplex.cs, at the start of the method DisposeILBO
                   The base method will have following parameters - string sILBOCode
                   The wrapped method will have following parameters - ref string sILBOCode As string, ref Hashtable htContextItems

        ***************************************************************************/

        public void DisposeILBO_Start(ref string sILBOCode, ref Dictionary<string, Object> htContextItems)
        {
            try
            {

            }
            catch (Exception e)
            {
                FillMessageObject(""activity : DisposeILBO( sILBOCode = \"""" + sILBOCode + ""\"")"", ""Act0002"", e.Message);
                throw new Exception(e.Message, e);
            }
        }

        public void DisposeILBO_Start(ref string sILBOCode, ref Hashtable htContextItems)
        {
            try
            {

            }
            catch (Exception e)
            {
                FillMessageObject(""activity : DisposeILBO( sILBOCode = \"""" + sILBOCode + ""\"")"", ""Act0002"", e.Message);
                throw new Exception(e.Message, e);
            }
        }

        /**************************************************************************
        Function Name   : DisposeILBO_End
        Author			: 
        Date			: ");
            
            #line 263 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\WebLayer\BaseCalloutActivityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DateTime.Now.ToShortDateString()));
            
            #line default
            #line hidden
            this.Write(@"
        Description     : This function can be invoked from the activity dll TreeComplex.cs, at the end of the method DisposeILBO
						The base method will have following parameters - string sILBOCode
						The wrapped method will have following parameters - ref string sILBOCode As string, ref Hashtable htContextItems

        ***************************************************************************/

        public void DisposeILBO_End(ref string sILBOCode, ref Dictionary<string, Object> htContextItems)
        {
            try
            {

            }
            catch (Exception e)
            {
                FillMessageObject(""activity : DisposeILBO( sILBOCode = \"""" + sILBOCode + ""\"")"", ""Act0002"", e.Message);
                throw new Exception(e.Message, e);
            }
        }

        public void DisposeILBO_End(ref string sILBOCode, ref Hashtable htContextItems)
        {
            try
            {

            }
            catch (Exception e)
            {
                FillMessageObject(""activity : DisposeILBO( sILBOCode = \"""" + sILBOCode + ""\"")"", ""Act0002"", e.Message);
                throw new Exception(e.Message, e);
            }
        }

        /**************************************************************************
        Function Name   : DisposeILBO_ErrHdlr
        Author			: 
        Date			: ");
            
            #line 299 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\WebLayer\BaseCalloutActivityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DateTime.Now.ToShortDateString()));
            
            #line default
            #line hidden
            this.Write(@"
        Description     : This function can be invoked from the activity dll TreeComplex.cs, at the catch of block of the method DisposeILBO
						The base method will have following parameters - string sILBOCode
						The wrapped method will have following parameters - ref string sILBOCode As string, ref Hashtable htContextItems, ref Exception e

        ***************************************************************************/

        public void DisposeILBO_ErrHdlr(ref string sILBOCode, ref Dictionary<string, Object> htContextItems, ref Exception ex)
        {
            try
            {

            }
            catch (Exception e)
            {
                FillMessageObject(""activity : DisposeILBO( sILBOCode = \"""" + sILBOCode + ""\"")"", ""Act0002"", e.Message);
                throw new Exception(e.Message, e);
            }
        }

        public void DisposeILBO_ErrHdlr(ref string sILBOCode, ref Hashtable htContextItems, ref Exception ex)
        {
            try
            {

            }
            catch (Exception e)
            {
                FillMessageObject(""activity : DisposeILBO( sILBOCode = \"""" + sILBOCode + ""\"")"", ""Act0002"", e.Message);
                throw new Exception(e.Message, e);
            }
        }


        /**************************************************************************
        Function Name   : GetILBOEx_Start
        Author			: 
        Date			: ");
            
            #line 336 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\WebLayer\BaseCalloutActivityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DateTime.Now.ToShortDateString()));
            
            #line default
            #line hidden
            this.Write("\r\n        Description     : This function can be invoked from the activity dll Tr" +
                    "eeComplex.cs, at the start of the method GetILBOEx\r\n\t\t\t\t\t\tThe base method will h" +
                    "ave following parameters - string sILBOCode, long lILBOIndex\r\n\t\t\t\t\t\tThe wrapped " +
                    "method will have following parameters - ref string sILBOCode As string, ref long" +
                    " lILBOIndex, ref Hashtable htContextItems\r\n\r\n        ***************************" +
                    "************************************************/\r\n\r\n        public IILBO GetILB" +
                    "OEx_Start(ref string sILBOCode, ref long lILBOIndex, ref Dictionary<string, Obje" +
                    "ct> htContextItems)\r\n        {\r\n            try\r\n            {\r\n                " +
                    "return null;\r\n            }\r\n            catch (Exception e)\r\n            {\r\n   " +
                    "             FillMessageObject(\"activity : GetILBOEx( sILBOCode = \\\"\" + sILBOCod" +
                    "e + \"\\\")\", \"Act0001\", e.Message);\r\n                throw new Exception(e.Message" +
                    ", e);\r\n            }\r\n        }\r\n\r\n        public IILBO GetILBOEx_Start(ref stri" +
                    "ng sILBOCode, ref long lILBOIndex, ref Hashtable htContextItems)\r\n        {\r\n   " +
                    "         try\r\n            {\r\n                return null;\r\n            }\r\n      " +
                    "      catch (Exception e)\r\n            {\r\n                FillMessageObject(\"act" +
                    "ivity : GetILBOEx( sILBOCode = \\\"\" + sILBOCode + \"\\\")\", \"Act0001\", e.Message);\r\n" +
                    "                throw new Exception(e.Message, e);\r\n            }\r\n        }\r\n\r\n" +
                    "\r\n        /*********************************************************************" +
                    "*****\r\n        Function Name   : GetILBOEx_End\r\n        Author\t\t\t: \r\n        Dat" +
                    "e\t\t\t: ");
            
            #line 373 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\WebLayer\BaseCalloutActivityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DateTime.Now.ToShortDateString()));
            
            #line default
            #line hidden
            this.Write("\r\n        Description     : This function can be invoked from the activity dll Tr" +
                    "eeComplex.cs, at the end of the method GetILBOEx\r\n\t\t\t\t\t\tThe base method will hav" +
                    "e following parameters - string sILBOCode, long lILBOIndex\r\n\t\t\t\t\t\tThe wrapped me" +
                    "thod will have following parameters - ref string sILBOCode As string, ref long l" +
                    "ILBOIndex, ref Hashtable htContextItems\r\n\r\n        *****************************" +
                    "**********************************************/\r\n\r\n        public IILBO GetILBOE" +
                    "x_End(ref string sILBOCode, ref long lILBOIndex, ref Dictionary<string, Object> " +
                    "htContextItems)\r\n        {\r\n            try\r\n            {\r\n                retu" +
                    "rn null;\r\n            }\r\n            catch (Exception e)\r\n            {\r\n       " +
                    "         FillMessageObject(\"activity : GetILBOEx( sILBOCode = \\\"\" + sILBOCode + " +
                    "\"\\\")\", \"Act0001\", e.Message);\r\n                throw new Exception(e.Message, e)" +
                    ";\r\n            }\r\n        }\r\n\r\n        public IILBO GetILBOEx_End(ref string sIL" +
                    "BOCode, ref long lILBOIndex, ref Hashtable htContextItems)\r\n        {\r\n         " +
                    "   try\r\n            {\r\n                return null;\r\n            }\r\n            " +
                    "catch (Exception e)\r\n            {\r\n                FillMessageObject(\"activity " +
                    ": GetILBOEx( sILBOCode = \\\"\" + sILBOCode + \"\\\")\", \"Act0001\", e.Message);\r\n      " +
                    "          throw new Exception(e.Message, e);\r\n            }\r\n        }\r\n\r\n\r\n    " +
                    "    /**************************************************************************\r" +
                    "\n        Function Name   : GetILBOEx_ErrHdlr\r\n        Author\t\t\t: \r\n        Date\t" +
                    "\t\t: ");
            
            #line 410 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\WebLayer\BaseCalloutActivityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DateTime.Now.ToShortDateString()));
            
            #line default
            #line hidden
            this.Write("\r\n        Description     : This function can be invoked from the activity dll Tr" +
                    "eeComplex.cs, at the catch block of the method GetILBOEx\r\n\t\t\t\t\t\tThe base method " +
                    "will have following parameters - string sILBOCode, long lILBOIndex\r\n\t\t\t\t\t\tThe wr" +
                    "apped method will have following parameters - ref string sILBOCode As string, re" +
                    "f long lILBOIndex, ref Hashtable htContextItems\r\n\r\n        *********************" +
                    "******************************************************/\r\n\r\n        public IILBO " +
                    "GetILBOEx_ErrHdlr(ref string sILBOCode, ref long lILBOIndex, ref Dictionary<stri" +
                    "ng, Object> htContextItems, ref Exception ex)\r\n        {\r\n            try\r\n     " +
                    "       {\r\n                return null;\r\n            }\r\n            catch (Except" +
                    "ion e)\r\n            {\r\n                FillMessageObject(\"activity : GetILBOEx( " +
                    "sILBOCode = \\\"\" + sILBOCode + \"\\\")\", \"Act0001\", e.Message);\r\n                thr" +
                    "ow new Exception(e.Message, e);\r\n            }\r\n        }\r\n\r\n        public IILB" +
                    "O GetILBOEx_ErrHdlr(ref string sILBOCode, ref long lILBOIndex, ref Hashtable htC" +
                    "ontextItems, ref Exception ex)\r\n        {\r\n            try\r\n            {\r\n     " +
                    "           return null;\r\n            }\r\n            catch (Exception e)\r\n       " +
                    "     {\r\n                FillMessageObject(\"activity : GetILBOEx( sILBOCode = \\\"\"" +
                    " + sILBOCode + \"\\\")\", \"Act0001\", e.Message);\r\n                throw new Exceptio" +
                    "n(e.Message, e);\r\n            }\r\n        }\r\n\r\n\r\n        /***********************" +
                    "***************************************************\r\n        Function Name   : D" +
                    "isposeILBOEx_Start\r\n        Author\t\t\t: \r\n        Date\t\t\t: ");
            
            #line 447 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\WebLayer\BaseCalloutActivityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DateTime.Now.ToShortDateString()));
            
            #line default
            #line hidden
            this.Write(@"
        Description     : This function can be invoked from the activity dll TreeComplex.cs, at the start of the method DisposeILBOEx
						The base method will have following parameters - string sILBOCode, long lILBOIndex
						The wrapped method will have following parameters - ref string sILBOCode As string, ref long lILBOIndex, ref Hashtable htContextItems
        ***************************************************************************/

        public void DisposeILBOEx_Start(ref string sILBOCode, ref long lILBOIndex, ref Dictionary<string, Object> htContextItems)
        {
            try
            {

            }
            catch (Exception e)
            {
                FillMessageObject(""activity : DisposeILBOEx( sILBOCode = \"""" + sILBOCode + ""\"")"", ""Act0002"", e.Message);
                throw new Exception(e.Message, e);
            }
        }

        public void DisposeILBOEx_Start(ref string sILBOCode, ref long lILBOIndex, ref Hashtable htContextItems)
        {
            try
            {

            }
            catch (Exception e)
            {
                FillMessageObject(""activity : DisposeILBOEx( sILBOCode = \"""" + sILBOCode + ""\"")"", ""Act0002"", e.Message);
                throw new Exception(e.Message, e);
            }
        }

        /**************************************************************************
        Function Name   : DisposeILBOEx_End
        Author			: 
        Date			: ");
            
            #line 482 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\WebLayer\BaseCalloutActivityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DateTime.Now.ToShortDateString()));
            
            #line default
            #line hidden
            this.Write(@"
        Description     : This function can be invoked from the activity dll TreeComplex.cs, at the end of the method DisposeILBOEx
						The base method will have following parameters - string sILBOCode, long lILBOIndex
						The wrapped method will have following parameters - ref string sILBOCode As string, ref long lILBOIndex, ref Hashtable htContextItems
        ***************************************************************************/

        public void DisposeILBOEx_End(ref string sILBOCode, ref long lILBOIndex, ref Dictionary<string, Object> htContextItems)
        {
            try
            {

            }
            catch (Exception e)
            {
                FillMessageObject(""activity : DisposeILBOEx( sILBOCode = \"""" + sILBOCode + ""\"")"", ""Act0002"", e.Message);
                throw new Exception(e.Message, e);
            }
        }

        public void DisposeILBOEx_End(ref string sILBOCode, ref long lILBOIndex, ref Hashtable htContextItems)
        {
            try
            {

            }
            catch (Exception e)
            {
                FillMessageObject(""activity : DisposeILBOEx( sILBOCode = \"""" + sILBOCode + ""\"")"", ""Act0002"", e.Message);
                throw new Exception(e.Message, e);
            }
        }

        /**************************************************************************
        Function Name   : DisposeILBOEx_ErrHdlr
        Author			: 
        Date			: ");
            
            #line 517 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\WebLayer\BaseCalloutActivityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DateTime.Now.ToShortDateString()));
            
            #line default
            #line hidden
            this.Write("\r\n        Description     : This function can be invoked from the activity dll Tr" +
                    "eeComplex.cs, at the catch block of the method DisposeILBOEx\r\n\t\t\t\t\t\tThe base met" +
                    "hod will have following parameters - string sILBOCode, long lILBOIndex\r\n\t\t\t\t\t\tTh" +
                    "e wrapped method will have following parameters - ref string sILBOCode As string" +
                    ", ref long lILBOIndex, ref Hashtable htContextItems\r\n        *******************" +
                    "********************************************************/\r\n\r\n        public void" +
                    " DisposeILBOEx_ErrHdlr(ref string sILBOCode, ref long lILBOIndex, ref Dictionary" +
                    "<string, Object> htContextItems, ref Exception ex)\r\n        {\r\n            try\r\n" +
                    "            {\r\n\r\n            }\r\n            catch (Exception e)\r\n            {\r\n" +
                    "                FillMessageObject(\"activity : DisposeILBOEx( sILBOCode = \\\"\" + s" +
                    "ILBOCode + \"\\\")\", \"Act0002\", e.Message);\r\n                throw new Exception(e." +
                    "Message, e);\r\n            }\r\n        }\r\n\r\n        public void DisposeILBOEx_ErrH" +
                    "dlr(ref string sILBOCode, ref long lILBOIndex, ref Hashtable htContextItems, ref" +
                    " Exception ex)\r\n        {\r\n            try\r\n            {\r\n\r\n            }\r\n    " +
                    "        catch (Exception e)\r\n            {\r\n                FillMessageObject(\"a" +
                    "ctivity : DisposeILBOEx( sILBOCode = \\\"\" + sILBOCode + \"\\\")\", \"Act0002\", e.Messa" +
                    "ge);\r\n                throw new Exception(e.Message, e);\r\n            }\r\n       " +
                    " }\r\n\r\n\r\n        /// <summary>\r\n        /// This method Gets the Context Value In" +
                    "formation.\r\n        /// </summary>\r\n        /***********************************" +
                    "***************************************\r\n        Function Name   : GetContextVal" +
                    "ue\r\n        Author\t\t\t: \r\n        Date\t\t\t: ");
            
            #line 556 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\WebLayer\BaseCalloutActivityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DateTime.Now.ToShortDateString()));
            
            #line default
            #line hidden
            this.Write(@"
        Description     : Gets the Context Value Information.
        ***************************************************************************/

        public object GetContextValue(string sContextName)
        {
            try
            {
                Trace.WriteLineIf(SessionManager.m_ILActTraceSwitch.TraceInfo, ""GetContextValue(sContextName = \"""" + sContextName + ""\"")"", ""Activity "");
                return htContextItems[sContextName];
            }
            catch (Exception e)
            {
                FillMessageObject(""activity : GetContextValue(sContextName = \"""" + sContextName + ""\"")"", ""Act0003"", e.Message);
                throw new Exception(e.Message, e);
            }
        }


        /// <summary>
        /// This method Sets the Context Value Information.
        /// </summary>
        /**************************************************************************
        Function Name   : SetContextValue
        Author			: 
        Date			: ");
            
            #line 581 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\WebLayer\BaseCalloutActivityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DateTime.Now.ToShortDateString()));
            
            #line default
            #line hidden
            this.Write(@"
        Description     : Sets the Context Value Information.
        ***************************************************************************/

        public void SetContextValue(string sContextName, object sContextValue)
        {
            try
            {
                Trace.WriteLineIf(SessionManager.m_ILActTraceSwitch.TraceInfo, ""SetContextValue(sContextName = \"""" + sContextName + ""\"", sContextValue = "" + sContextValue + "")"", ""activity  "");
                htContextItems[sContextName] = sContextValue;
            }
            catch (Exception e)
            {
                FillMessageObject(""activity : SetContextValue(sContextName = \"""" + sContextName + ""\"", sContextValue = "" + sContextValue + "")"", ""Act0004"", e.Message);
                throw new Exception(e.Message, e);
            }
        }


        /// <summary>
        /// This method Fills the Message object when an error occurs.
        /// </summary>
        /**************************************************************************
        Function Name   : FillMessageObject
        Author			: 
        Date			: ");
            
            #line 606 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\WebLayer\BaseCalloutActivityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DateTime.Now.ToShortDateString()));
            
            #line default
            #line hidden
            this.Write(@"
        Description     : Fills the Message object when an error occurs.
        ***************************************************************************/

        private void FillMessageObject(string sMethod, string sErrNumber, string sErrMessage)
        {
            try
            {
                Trace.WriteLineIf(SessionManager.m_ILActTraceSwitch.TraceInfo, ""FillMessageObject(sMethod = \"""" + sMethod + ""\"", sErrNumber =\"""" + sErrNumber + ""\"", sErrMessage = \"""" + sErrMessage + ""\"")"", ""activity  "");

                //Get the Message Object from the session manager and add the error message to it.
                ISessionManager ISManager = (ISessionManager)System.Web.HttpContext.Current.Session[""SessionManager""];
                IMessage Imsg = ISManager.GetMessageObject();
                Imsg.AddMessage(sErrNumber, sErrMessage, sMethod, string.Empty, ""5"");
            }
            catch (Exception e)
            {
                Trace.WriteLineIf(SessionManager.m_ILActTraceSwitch.TraceError, e.Message, ""activity : FillMessageObject(sMethod = \"""" + sMethod + ""\"", sErrNumber = \"""" + sErrNumber + ""\"",  sErrMessage = \"""" + sErrMessage + ""\"")"");
            }
        }

	}
	
	#endregion
}

");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 632 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\WebLayer\BaseCalloutActivityTemplate.tt"

	public string sNamespaceName {get;set;}
	public string sTargetDir {get;set;}
	public ECRLevelOptions ecrOptions{get;set;}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public class BaseCalloutActivityTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
