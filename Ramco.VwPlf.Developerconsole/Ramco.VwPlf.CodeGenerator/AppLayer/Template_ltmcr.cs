// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Ramco.VwPlf.CodeGenerator.AppLayer
{
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class Template_ltmcr : Template_ltmcrBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("/********************************************************************************" +
                    "************************\r\n* Copyright @2004, RAMCO SYSTEMS,  All rights reserved" +
                    ".\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n* Application/Module Name   :");
            
            #line 5 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ecrOptions.Component.ToLower()));
            
            #line default
            #line hidden
            this.Write("_ltmcr.cs\r\n* Code Generated on         :");
            
            #line 6 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DateTime.Now));
            
            #line default
            #line hidden
            this.Write("\r\n* Code Generated From       :");
            
            #line 7 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(string.Format("{0}/{1}/{2}/{3}/{4}/{5}/{6}",ecrOptions.Customer, ecrOptions.Project, ecrOptions.Ecrno, ecrOptions.Model, ecrOptions.User, ecrOptions.DB, ecrOptions.CodegenClient)));
            
            #line default
            #line hidden
            this.Write(@"
* Revision/Version #        :
* Purpose                   :
* Modifications             :
* Modifier Name & Date      :
********************************************************************************************************/
using System;
using System.Reflection;
using System.Diagnostics;
[assembly: AssemblyDescription(""");
            
            #line 16 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ecrOptions.Customer));
            
            #line default
            #line hidden
            this.Write("/");
            
            #line 16 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ecrOptions.Project));
            
            #line default
            #line hidden
            this.Write("/");
            
            #line 16 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ecrOptions.Ecrno));
            
            #line default
            #line hidden
            this.Write("/");
            
            #line 16 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ecrOptions.Model.Replace('\\','-')));
            
            #line default
            #line hidden
            this.Write("/");
            
            #line 16 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ecrOptions.User));
            
            #line default
            #line hidden
            this.Write("/");
            
            #line 16 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ecrOptions.DB));
            
            #line default
            #line hidden
            this.Write("/");
            
            #line 16 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ecrOptions.CodegenClient));
            
            #line default
            #line hidden
            this.Write("/");
            
            #line 16 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DateTime.Now.ToShortDateString()));
            
            #line default
            #line hidden
            this.Write(@""")]
//transction scope - Dotnet ltm transaction scope - 0 - Required, 1 - Required New, 2 - Supported
// model scope - 0 Supported, 1 - Required
//outZBytes - true - zipped byte[]  , false - string
//tdFormat = 0 - String , 1- JSON , 2-Dataset
namespace com.ramco.vw.");
            
            #line 21 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ecrOptions.Component.ToLower()));
            
            #line default
            #line hidden
            this.Write(".service\r\n{\r\n\tpublic class C");
            
            #line 23 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ecrOptions.Component.ToLower()));
            
            #line default
            #line hidden
            this.Write(@"_ltmcr
	{
		public const int ATMA_SUCCESS = 0;
		public const int ATMA_FAILURE = 999;
		public const int ATMA_INVALID_SERVICE = 998;


		public int ProcessDocument(string szInMtd, string szServiceName, string szSessionToken, bool outZBytes, int tdFormat, ref string szOutMtd, ref byte[] byteOutMtd)
		{
			DefaultTraceListener output = new DefaultTraceListener();
			try
			{
				szOutMtd = """";
				byteOutMtd = null;

				C");
            
            #line 38 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ecrOptions.Component.ToLower()));
            
            #line default
            #line hidden
            this.Write("_ltm c");
            
            #line 38 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ecrOptions.Component.ToLower()));
            
            #line default
            #line hidden
            this.Write("_ltm = new C");
            
            #line 38 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ecrOptions.Component.ToLower()));
            
            #line default
            #line hidden
            this.Write("_ltm();\r\n\t\t\t\tswitch (szServiceName.ToLower().Trim())\r\n\t\t\t\t{\r\n\t\t\t\t\t");
            
            #line 41 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"

				    foreach(Service service in this.services)
					{
					
            
            #line default
            #line hidden
            this.Write("case(\"");
            
            #line 44 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(service.Name.ToLower()));
            
            #line default
            #line hidden
            this.Write("\"):\r\n\t\t\t\t\t\toutput.WriteLine(\"");
            
            #line 45 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ecrOptions.Component.ToUpper()));
            
            #line default
            #line hidden
            this.Write(".C");
            
            #line 45 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ecrOptions.Component.ToLower()));
            
            #line default
            #line hidden
            this.Write("_ltmcr.ProcessDocument - ");
            
            #line 45 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(service.Name.ToLower()));
            
            #line default
            #line hidden
            this.Write(" service started.\");\r\n\t\t\t\t\t\tif (c");
            
            #line 46 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ecrOptions.Component.ToLower()));
            
            #line default
            #line hidden
            this.Write("_ltm.ProcessDocument(szInMtd, szServiceName, szSessionToken, ");
            
            #line 46 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(service.Type=="0" ? "2" : "0"));
            
            #line default
            #line hidden
            this.Write(", outZBytes, tdFormat, out szOutMtd, out byteOutMtd) == 0)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\toutpu" +
                    "t.WriteLine(\"");
            
            #line 48 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ecrOptions.Component.ToUpper()));
            
            #line default
            #line hidden
            this.Write(".C");
            
            #line 48 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ecrOptions.Component.ToLower()));
            
            #line default
            #line hidden
            this.Write("_ltmcr.ProcessDocument - ");
            
            #line 48 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(service.Name.ToLower()));
            
            #line default
            #line hidden
            this.Write(" service executed successfully.\");\r\n\t\t\t\t\t\t\treturn ATMA_SUCCESS;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\te" +
                    "lse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\toutput.WriteLine(\"");
            
            #line 53 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ecrOptions.Component.ToUpper()));
            
            #line default
            #line hidden
            this.Write(".C");
            
            #line 53 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ecrOptions.Component.ToLower()));
            
            #line default
            #line hidden
            this.Write("_ltmcr.ProcessDocument - ");
            
            #line 53 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(service.Name.ToLower()));
            
            #line default
            #line hidden
            this.Write(" service executed with a failure.\");\r\n\t\t\t\t\t\t\treturn ATMA_FAILURE;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t" +
                    "");
            
            #line 56 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"

					}
					
            
            #line default
            #line hidden
            this.Write("default:\r\n\t\t\t\t\t\toutput.WriteLine(\"C");
            
            #line 59 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ecrOptions.Component.ToLower()));
            
            #line default
            #line hidden
            this.Write("_ltmcr.ProcessDocument - Service referred Is Not part of the runtime component-\" " +
                    "+ szServiceName);\r\n\t\t\t\t\t\treturn ATMA_INVALID_SERVICE;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch (Ex" +
                    "ception e)\r\n\t\t\t{\r\n\t\t\t\toutput.WriteLine(\"C");
            
            #line 65 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ecrOptions.Component.ToLower()));
            
            #line default
            #line hidden
            this.Write("_ltmcr.ProcessDocument - General Exception :\");\r\n\t\t\t\toutput.WriteLine(e.Message);" +
                    "\r\n\t\t\t\tszOutMtd = \"\";\r\n\t\t\t\treturn ATMA_FAILURE;\r\n\t\t\t}\r\n\t\t\tfinally\r\n\t\t\t{\r\n\t\t\t}\r\n\t\t" +
                    "}\r\n\t}\r\n}\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 76 "E:\Workings\__Ramco.VwPlf.Developerconsole\Ramco.VwPlf.CodeGenerator\AppLayer\Template_ltmcr.tt"

private System.Collections.Generic.List<Service> services;
public ECRLevelOptions ecrOptions{get;set;}
public Template_ltmcr(System.Collections.Generic.List<Service> _services)
{
	this.services = _services;	
}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public class Template_ltmcrBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
